<style>
    #shopify-section-{{ section.id }} {
        --section-products-per-row: {{ section.settings.mobile_products_per_row | times: 1 }};
    }

    @media screen and (min-width: 741px) {
        #shopify-section-{{ section.id }} {
        {%- assign remainder_for_two = section.settings.products_per_page | modulo: 2 -%}
        {%- assign remainder_for_desktop_count = section.settings.products_per_page | modulo: section.settings.desktop_products_per_row -%}

        --section-products-per-row: {% if remainder_for_two == 0 and remainder_for_desktop_count == 0 %}2{% else %}3{% endif %};
        }
    }
    @media screen and (min-width: 1400px) {
      #shopify-section-{{ section.id }} {
        --section-products-per-row: {{ section.settings.desktop_products_per_row }};
      }
    }
</style>
{% assign collection_list = section.settings.collection_list %}
<div class="container">
    <nav aria-label="{{ 'general.breadcrumb.title' | t }}" class="breadcrumb text--xsmall hidden-phone">
        <ol class="breadcrumb__list" role="list">
          <li class="breadcrumb__item">
            <a class="breadcrumb__link" href="{{ routes.root_url }}">{{ 'general.breadcrumb.home' | t }}</a>
          </li>

          <li class="breadcrumb__item">
            <span class="breadcrumb__link" aria-current="page">{{ page.title }}</span>
          </li>
        </ol>
    </nav>
    <header class="section__header ">
        <div class="text-container">
            <h2 class="heading heading--small">{{ section.settings.heading }}</h2>
            <h3 class="heading h2">{{ section.settings.subheading }}</h3>
        </div>
    </header>
    <div class="collection-dropdown">
        <div class="select-wrapper">
            <combo-box id="{{ section.id }}-combo-box" class="combo-box">
                <span class="combo-box__overlay"></span>

                <div class="combo-box__option-list" role="listbox">
                    {%- for collection in collection_list -%}
                        <button type="button" role="option" class="combo-box__option-item" value="{{ collection.title }}" >{{ collection.title }}</button>
                    {%- endfor -%}
                </div>

                <input type="hidden" data-option-position="1" name="option1" form="{{ section.id }}" value="{{ 'filter_collections.general.select_placeholder' | t }}" aria-label="{{ 'filter_collections.general.select_placeholder' | t }}">
            </combo-box>

            <button type="button" is="toggle-button" class="select" aria-expanded="false" aria-haspopup="listbox" aria-controls="{{ section.id }}-combo-box">
                <span id="{{ section.id }}-value" class="select__selected-value">{{ 'filter_collections.general.select_placeholder' | t }}</span>
            {%- render 'icon' with 'chevron' -%}
            </button>
        </div>
    </div>
    {%- paginate collection_list by section.settings.products_per_page -%}
        <product-list {% if settings.stagger_products_apparition %}stagger-apparition{% endif %} class="product-facet__product-list product-list anchor">
            {%- assign sidebar_width = 0 -%}
            <div class="product-list__inner">
                {%- assign desktop_number_of_products_minus_one = section.settings.desktop_products_per_row | minus: 1 -%}
                {%- assign gap_width = 24.0 | divided_by: section.settings.desktop_products_per_row | times: desktop_number_of_products_minus_one -%}
                {%- capture sizes_attribute -%}(max-width: 740px) calc({{ 100.0 | divided_by: section.settings.mobile_products_per_row | ceil }}vw - 24px), calc((min(100vw - 80px, 1520px) - {{ sidebar_width }}px) / {{ section.settings.desktop_products_per_row }} - {{ gap_width | ceil }}px){%- endcapture -%}
                {% for collection in collection_list %}
                    {%- for product in collection.products -%}
                        {%- render 'product-item', product: product, collection: collection, sizes_attribute: sizes_attribute, reveal: settings.stagger_products_apparition, filter_collection: true -%}
                    {%- endfor -%}
                {% endfor %}
            </div>
        </product-list>

        {%- render 'pagination', paginate: paginate, use_ajax: true -%}
    {%- endpaginate -%}
</div>

<script src="{{ 'main-collection-filter.js' | asset_url }}"></script>

{% schema %}
    {
        "name": "Main Collection Filter",
        "class": "section main-collection-filter",
        "settings": [
            {
              "type": "text",
              "id": "heading",
              "label": "Heading"
            },
            {
              "type": "text",
              "id": "subheading",
              "label": "Sub Heading"
            },        
            {
              "type": "collection_list",
              "id": "collection_list",
              "label": "collection_list"
            },
            {
            "type": "range",
            "id": "products_per_page",
            "label": "Products per page",
            "min": 8,
            "max": 50,
            "step": 1,
            "default": 24
            },
            {
            "type": "select",
            "id": "mobile_products_per_row",
            "label": "Products per row (mobile)",
            "options": [
                {
                "value": "1",
                "label": "1"
                },
                {
                "value": "2",
                "label": "2"
                }
            ],
            "default": "2"
            },
            {
            "type": "range",
            "min": 3,
            "max": 5,
            "id": "desktop_products_per_row",
            "label": "Products per row (desktop)",
            "default": 4
            }
        ],
        "presets": [
          {
            "name": "Main Collection Filter",
            "settings": {
              
            }
          }
        ],
    }
{% endschema %}
